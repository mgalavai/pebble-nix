name: Build with Nix

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install Nix - simpler and more direct approach
      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Check Nix installation
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          echo "PATH: $PATH"
          nix --version || echo "nix command failed"
          ls -la

      # Replace the following step with your actual build command.
      # For example, if you have a flake that builds your Pebble app,
      # you might run:
      - name: Build project
        run: |
          # Use Nix (not Lix) to build the project
          echo "Building with 'nix build .' command..."
          nix build . || echo "nix build failed"
          
          # Verify the build result
          echo "Checking build result:"
          ls -l result || echo "No result directory found"
          
          # If build succeeded, show contents to verify
          if [ -L "result" ]; then
            echo "Build succeeded! Result directory contents:"
            ls -la result/
            ls -la result/bin/
          fi

      # Optional: Upload the build artifact.
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-result
          path: result