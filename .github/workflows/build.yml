name: Build with Lix

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install Nix - simpler and more direct approach
      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      # Install Lix using Nix directly
      - name: Install Lix
        run: |
          # First, search for lix package to find the correct attribute path
          echo "Searching for Lix package in Nixpkgs..."
          nix-env -qaP '*lix*' || echo "No packages matching 'lix' found"
          
          # Try alternative installation methods
          echo "Trying to install Lix using alternative methods..."
          # Method 1: Try direct URL to Lix binary
          curl -L https://github.com/lix-pm/lix.client/releases/download/v15.12.0/lix-linux.tar.gz -o lix.tar.gz || echo "Failed to download Lix"
          mkdir -p ~/lix && tar -xzf lix.tar.gz -C ~/lix || echo "Failed to extract Lix"
          export PATH="$HOME/lix:$PATH"
          echo "PATH after adding Lix directory: $PATH"
          
          # Method 2: Try npm installation as fallback
          echo "Trying npm installation as fallback..."
          npm install -g lix || echo "npm installation of Lix failed"
          
          # Check if Lix is now available
          echo "Checking Lix installation:"
          which lix || echo "lix command not found after all installation attempts"

      - name: Setup Nix environment and check version
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          echo "PATH: $PATH"
          which lix || echo "lix not found"
          lix --version || echo "lix command failed"

      - name: List installed binaries
        run: |
          echo "Contents of /nix/var/nix/profiles/default/bin:"
          ls -l /nix/var/nix/profiles/default/bin || echo "Directory not found"
          echo "Contents of /home/runner/.nix-profile/bin:"
          ls -l /home/runner/.nix-profile/bin || echo "Directory not found"

      # Replace the following step with your actual build command.
      # For example, if you have a flake that builds your Pebble app,
      # you might run:
      - name: Build project
        run: |
          # Using nix-shell as a fallback if lix is not directly available
          nix-shell -p lix --run "lix build .#yourTarget" || echo "Build command failed"

      # Optional: Upload the build artifact.
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-result
          path: result